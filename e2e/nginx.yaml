apiVersion: v1
kind: Service
metadata:
  name: nginx
  annotations:
    kube-service-exporter.github.com/exported: "true"
    kube-service-exporter.github.com/load-balancer-service-per-cluster: "false"
spec:
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    run: nginx
  type: LoadBalancer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx
data:
  nginx.conf: |
    env KUBE_HOSTNAME;

    worker_processes  1;

    events {
        worker_connections  1024;
    }


    http {
        include       mime.types;
        default_type  application/octet-stream;

        sendfile        on;
        keepalive_timeout  65;

        server {
            listen       80;
            server_name  localhost;
            set_by_lua   $kube_hostname 'return os.getenv("KUBE_HOSTNAME")';
            add_header   X-Pod-Name $hostname;
            add_header   X-Hostname $kube_hostname;

            location / {
                root   /usr/local/openresty/nginx/html;
                index  index.html index.htm;
            }

            error_page   500 502 503 504  /50x.html;
            location = /50x.html {
                root   /usr/local/openresty/nginx/html;
            }
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  selector:
    matchLabels:
      run: nginx
  template:
    metadata:
      labels:
        run: nginx
    spec:
      containers:
      - name: nginx
        image: openresty/openresty
#        command: ['sleep', '3600'] 
        ports:
        - name: http
          containerPort: 80
        readinessProbe:
          httpGet:
            path: /
            port: 80
            scheme: HTTP
        env:
        - name: KUBE_HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: nginx
          mountPath: /usr/local/openresty/nginx/conf/nginx.conf
          subPath: nginx.conf
      volumes:
      - name: nginx
        configMap:
          name: nginx
